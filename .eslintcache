[{"C:\\Users\\Ninja\\Downloads\\React\\test1\\src\\index.js":"1","C:\\Users\\Ninja\\Downloads\\React\\test1\\src\\reportWebVitals.js":"2","C:\\Users\\Ninja\\Downloads\\React\\test1\\src\\App.jsx":"3","C:\\Users\\Ninja\\Downloads\\React\\test1\\src\\features\\Counter.jsx":"4","C:\\Users\\Ninja\\Downloads\\React\\test1\\src\\features\\signup\\Signup.jsx":"5","C:\\Users\\Ninja\\Downloads\\React\\test1\\src\\features\\signup\\Login.jsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":1274,"mtime":1608996388269,"results":"10","hashOfConfig":"8"},{"size":895,"mtime":1608721334344,"results":"11","hashOfConfig":"8"},{"size":4630,"mtime":1608721638989,"results":"12","hashOfConfig":"8"},{"size":2467,"mtime":1608721597372,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"7rq7bg",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\Ninja\\Downloads\\React\\test1\\src\\index.js",[],["28","29"],"C:\\Users\\Ninja\\Downloads\\React\\test1\\src\\reportWebVitals.js",[],"C:\\Users\\Ninja\\Downloads\\React\\test1\\src\\App.jsx",["30","31"],"C:\\Users\\Ninja\\Downloads\\React\\test1\\src\\features\\Counter.jsx",[],"C:\\Users\\Ninja\\Downloads\\React\\test1\\src\\features\\signup\\Signup.jsx",["32","33","34","35"],"import React, { useEffect, useState } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport axios from 'axios';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\n\r\nexport default function Signup() {\r\n    const [firstname, setfirstname] = useState(\"\");\r\n    const [lastname, setlastname] = useState(\"\");\r\n    const [companyname, setcompanyname] = useState(\"\");\r\n    const [phone, setphone] = useState(\"\");\r\n    const [country, setcountry] = useState(\"\");\r\n    const [username, setusername] = useState(\"\");\r\n    const [password, setpassword] = useState(\"\");\r\n    const [countries, setcountries] = useState([]);\r\n\r\n\r\nuseEffect(() => {\r\n\r\n    const fetchData = async () => {\r\n        const result = await axios(\r\n            'https://restcountries.eu/rest/v2/all?fields=name',\r\n        );\r\n   \r\n        setcountries(result.data);\r\n       \r\n      };\r\n   \r\n      fetchData();\r\n    \r\n\r\n    \r\n}, [])    ;\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n      <Card style={{boxShadow: \"1px 1px 10px 1px #DDDD\"}}>\r\n  \r\n        <Card.Body>\r\n        \r\n        <Row>\r\n          <Col>\r\n\r\n            <Form onSubmit={(e) => {\r\n                e.preventDefault();\r\n            }}>\r\n            <Form.Group >\r\n            <Form.Row>\r\n                <Col>\r\n                <Form.Label>First name </Form.Label>\r\n                <Form.Control placeholder=\"First name\" onChange={(e) => {\r\n                    setfirstname(e.currentTarget.value)\r\n                }} />\r\n                </Col>\r\n                <Col>\r\n                <Form.Label>Last name </Form.Label>\r\n                <Form.Control placeholder=\"Last name\" onChange={(e) => {\r\n                    setlastname(e.currentTarget.value)\r\n                }} />\r\n                </Col>\r\n            </Form.Row> \r\n                </Form.Group>    \r\n            \r\n                <Form.Group >\r\n                <Form.Label>Company name </Form.Label>\r\n                <Form.Control placeholder=\"Company name\" onChange={(e) => {\r\n                    setcompanyname(e.currentTarget.value)\r\n                }}/>\r\n                </Form.Group>\r\n                <Form.Group >\r\n            <Form.Row>\r\n                <Col>\r\n                <Form.Label>Phone number </Form.Label>\r\n                <Form.Control placeholder=\"Phone number\" onChange={(e) => {\r\n                    setphone(e.currentTarget.value)\r\n                }}/>\r\n                </Col>\r\n                <Col>\r\n                <Form.Label>Country </Form.Label>\r\n                \r\n                <Typeahead\r\n                   labelKey={\"name\"}\r\n                   options={countries}\r\n                   onChange={setcountry}\r\n                    selected={country}\r\n                    placeholder=\"Choose your country...\">\r\n                    \r\n                </Typeahead>\r\n\r\n                 \r\n                </Col>\r\n            </Form.Row> \r\n                </Form.Group>\r\n                \r\n            \r\n\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>UserName </Form.Label>\r\n                    <Form.Control type=\"email\" placeholder={\"UserName\"} value={username} onChange={(e) => {\r\n                        setusername(e.currentTarget.value)}} />\r\n                    <Form.Text className=\"text-muted\">\r\n                    \r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => {\r\n                        setpassword(e.currentTarget.value)}}/>\r\n                </Form.Group>\r\n  \r\n                <div className=\"text-center\">\r\n                <Button  variant=\"primary\" type=\"submit\" onClick={()=> {localStorage.setItem('username',username);\r\n                                                    localStorage.setItem('password',password);\r\n                                                    setusername('');\r\n                                                    setpassword('');}}>\r\n                    Sign Up\r\n                </Button>\r\n                </div>\r\n            </Form>\r\n\r\n            </Col>\r\n        </Row>\r\n          \r\n        </Card.Body>\r\n      </Card>\r\n      </Container>                          \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Ninja\\Downloads\\React\\test1\\src\\features\\signup\\Login.jsx",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":12},{"ruleId":"40","severity":1,"message":"44","line":10,"column":3,"nodeType":"42","messageId":"43","endLine":10,"endColumn":7},{"ruleId":"40","severity":1,"message":"45","line":15,"column":12,"nodeType":"42","messageId":"43","endLine":15,"endColumn":21},{"ruleId":"40","severity":1,"message":"46","line":16,"column":12,"nodeType":"42","messageId":"43","endLine":16,"endColumn":20},{"ruleId":"40","severity":1,"message":"47","line":17,"column":12,"nodeType":"42","messageId":"43","endLine":17,"endColumn":23},{"ruleId":"40","severity":1,"message":"48","line":18,"column":12,"nodeType":"42","messageId":"43","endLine":18,"endColumn":17},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'firstname' is assigned a value but never used.","'lastname' is assigned a value but never used.","'companyname' is assigned a value but never used.","'phone' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]